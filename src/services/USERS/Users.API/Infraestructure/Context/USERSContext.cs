// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Users.API.Infraestructure.DBModels;

namespace Users.API.Infraestructure.Context
{
    public partial class USERSContext : DbContext
    {
        public USERSContext()
        {
        }

        public USERSContext(DbContextOptions<USERSContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Permisos> Permisos { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<RolesPermisos> RolesPermisos { get; set; }
        public virtual DbSet<UsuarioAgencias> UsuarioAgencias { get; set; }
        public virtual DbSet<UsuarioFoto> UsuarioFoto { get; set; }
        public virtual DbSet<UsuarioRoles> UsuarioRoles { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=DESKTOP-CSF7EUN\\SQLEXPRESS;Initial Catalog=LRP_USERS_MNG_MS_DEV;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Permisos>(entity =>
            {
                entity.Property(e => e.CreadoEn).HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<RolesPermisos>(entity =>
            {
                entity.Property(e => e.CreadoEn).HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.IdPermisoNavigation)
                    .WithMany(p => p.RolesPermisos)
                    .HasForeignKey(d => d.IdPermiso)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__roles_per__Id_Pe__4222D4EF");

                entity.HasOne(d => d.IdRoleNavigation)
                    .WithMany(p => p.RolesPermisos)
                    .HasForeignKey(d => d.IdRole)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__roles_per__Id_Ro__412EB0B6");
            });

            modelBuilder.Entity<Usuarios>(entity =>
            {
                entity.Property(e => e.PrefijoGenero).IsFixedLength();
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}