// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Auth.API.Infraestructura.DBModels;

namespace Auth.API.Infraestructura.Context
{
    public partial class AUTHContext : DbContext
    {
        public AUTHContext()
        {
        }

        public AUTHContext(DbContextOptions<AUTHContext> options)
            : base(options)
        {
        }

        public virtual DbSet<IpBlock> IpBlock { get; set; }
        public virtual DbSet<Login> Login { get; set; }
        public virtual DbSet<Tokens> Tokens { get; set; }
        public virtual DbSet<UsuarioSesiones> UsuarioSesiones { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=DESKTOP-CSF7EUN\\SQLEXPRESS;Initial Catalog=LRP_AUTH_MS_DEV;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Login>(entity =>
            {
                entity.Property(e => e.CreadoEn).HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<Tokens>(entity =>
            {
                entity.Property(e => e.CreadoEn).HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<UsuarioSesiones>(entity =>
            {
                entity.Property(e => e.CreadoEn).HasDefaultValueSql("(getdate())");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}